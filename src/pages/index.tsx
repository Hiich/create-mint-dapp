import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { parseEther } from "viem";
import { useAccount, useContractWrite } from "wagmi";
import config from "~/config/config";
import logo from "~/../public/images/logo.png";
import { websiteConfig } from "config/config";
import { ConnectButton } from "@rainbow-me/rainbowkit";

const Home: NextPage = () => {
  const { isConnected } = useAccount();
  const [amount, setAmount] = useState(1);
  const { data, isLoading, isSuccess, isError, error, writeAsync } =
    useContractWrite({
      abi: config.contract_abi,
      address: config.contract_address as `0x${string}`,
      functionName: "mint",
    });

  return (
    <>
      <Head>
        <title>{websiteConfig.projectName}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-background bg-cover bg-center bg-no-repeat">
        <div className="container flex h-full flex-col items-center justify-between gap-12  px-4 py-16 text-white">
          <div className="flex flex-col gap-y-8 rounded-xl bg-black bg-opacity-40 p-16 items-center">
            <Image
              src={logo}
              alt={websiteConfig.projectName}
              width={150}
              height={150}
              className="z-20 rounded-full"
            />
            {/* Description */}
            <p className="text-center text-lg text-white">
              {websiteConfig.description}
            </p>
            <p className="text-center text-2xl font-bold text-white">
              Each {websiteConfig.nftSymbol} costs {websiteConfig.mintPrice} ETH
            </p>
            {isConnected && (
              <div className="flex flex-row items-center justify-center gap-x-4">
                <button
                  onClick={() => {
                    if (amount > 1) {
                      setAmount(amount - 1);
                    }
                  }}
                >
                  -
                </button>
                <p className="text-2xl">{amount}</p>
                <button
                  onClick={() => {
                    if (amount < 10) {
                      setAmount(amount + 1);
                    }
                  }}
                >
                  +
                </button>
              </div>
            )}
          </div>
          {isConnected ? (
            <>
              {!isLoading && !isError && !isSuccess && (
                <button
                  onClick={async () => {
                    writeAsync({
                      args: [amount],
                      value: parseEther(`${config.price * amount}`),
                    });
                  }}
                  type="button"
                  className="relative flex items-center justify-center"
                >
                  Mint
                </button>
              )}

              {isLoading && (
                <Image
                  src={logo}
                  alt={websiteConfig.projectName}
                  width={120}
                  height={120}
                  className="animate-pulse"
                />
              )}

              {isSuccess && (
                <div className="flex flex-col items-center justify-center text-white">
                  <p className="text-center text-2xl font-bold">
                    Minted successfully! <br />
                    Transaction hash:
                    <a
                      href={`${websiteConfig.blockExplorer}/tx/${data?.hash}`}
                      target="_blank"
                    >
                      {data?.hash}
                    </a>
                  </p>
                </div>
              )}

              {isError && (
                <div className="flex flex-col items-center justify-center text-red-500">
                  <p className="text-center text-2xl font-bold text-white">
                    {error?.message.split(".")[0]}
                  </p>
                </div>
              )}
            </>
          ) : (
            <ConnectButton />
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
